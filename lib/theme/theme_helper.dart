import 'dart:ui';
import 'package:flutter/material.dart';
import '../../core/app_export.dart';

String _appTheme = "primary";

/// Helper class for managing themes and colors.
class ThemeHelper {
  // A map of custom color themes supported by the app
  Map<String, PrimaryColors> _supportedCustomColor = {
    'primary': PrimaryColors()
  };

// A map of color schemes supported by the app
  Map<String, ColorScheme> _supportedColorScheme = {
    'primary': ColorSchemes.primaryColorScheme
  };

  /// Returns the primary colors for the current theme.
  PrimaryColors _getThemeColors() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedCustomColor.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    return _supportedCustomColor[_appTheme] ?? PrimaryColors();
  }

  /// Returns the current theme data.
  ThemeData _getThemeData() {
    //throw exception to notify given theme is not found or not generated by the generator
    if (!_supportedColorScheme.containsKey(_appTheme)) {
      throw Exception(
          "$_appTheme is not found.Make sure you have added this theme class in JSON Try running flutter pub run build_runner");
    }
    //return theme from map

    var colorScheme =
        _supportedColorScheme[_appTheme] ?? ColorSchemes.primaryColorScheme;
    return ThemeData(
      visualDensity: VisualDensity.standard,
      colorScheme: colorScheme,
      textTheme: TextThemes.textTheme(colorScheme),
      scaffoldBackgroundColor: colorScheme.primary,
      elevatedButtonTheme: ElevatedButtonThemeData(
        style: ElevatedButton.styleFrom(
          backgroundColor: appTheme.pink50,
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(10.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      outlinedButtonTheme: OutlinedButtonThemeData(
        style: OutlinedButton.styleFrom(
          backgroundColor: Colors.transparent,
          side: BorderSide(
            color: appTheme.red20001,
            width: 3.h,
          ),
          shape: RoundedRectangleBorder(
            borderRadius: BorderRadius.circular(24.h),
          ),
          visualDensity: const VisualDensity(
            vertical: -4,
            horizontal: -4,
          ),
          padding: EdgeInsets.zero,
        ),
      ),
      dividerTheme: DividerThemeData(
        thickness: 2,
        space: 2,
        color: appTheme.gray300,
      ),
    );
  }

  /// Returns the primary colors for the current theme.
  PrimaryColors themeColor() => _getThemeColors();

  /// Returns the current theme data.
  ThemeData themeData() => _getThemeData();
}

/// Class containing the supported text theme styles.
class TextThemes {
  static TextTheme textTheme(ColorScheme colorScheme) => TextTheme(
        bodyMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 15.fSize,
          fontFamily: 'Open Sans',
          fontWeight: FontWeight.w400,
        ),
        bodySmall: TextStyle(
          color: appTheme.gray800,
          fontSize: 12.fSize,
          fontFamily: 'Inter',
          fontWeight: FontWeight.w400,
        ),
        labelLarge: TextStyle(
          color: appTheme.black900,
          fontSize: 12.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        labelSmall: TextStyle(
          color: appTheme.blueGray400,
          fontSize: 9.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
        titleLarge: TextStyle(
          color: appTheme.blueGray400,
          fontSize: 20.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w400,
        ),
        titleMedium: TextStyle(
          color: appTheme.black900,
          fontSize: 17.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w600,
        ),
        titleSmall: TextStyle(
          color: appTheme.black900,
          fontSize: 14.fSize,
          fontFamily: 'Poppins',
          fontWeight: FontWeight.w500,
        ),
      );
}

/// Class containing the supported color schemes.
class ColorSchemes {
  static final primaryColorScheme = ColorScheme.light(
    // Primary colors
    primary: Color(0XFFFFFFFF),
    primaryContainer: Color(0XFF873E23),

    // Error colors
    errorContainer: Color(0XFFD6D6D6),

    // On colors(text colors)
    onPrimary: Color(0XFF952619),
  );
}

/// Class containing custom colors for a primary theme.
class PrimaryColors {
  // Black
  Color get black900 => Color(0XFF000000);

  // Blue
  Color get blue200 => Color(0XFF9FC3E6);

  // Bluef
  Color get blue2007f => Color(0X7FA2C5E5);

  // BlueGray
  Color get blueGray100 => Color(0XFFC9E3E2);
  Color get blueGray10001 => Color(0XFFD9D9D9);
  Color get blueGray400 => Color(0XFF809694);
  Color get blueGray700 => Color(0XFF2E5E60);
  Color get blueGray800 => Color(0XFF384347);

  // BlueGrayf
  Color get blueGray2007f => Color(0X7FAFC6BA);

  // Cyan
  Color get cyan100 => Color(0XFFC6EAE7);

  // DeepOrange
  Color get deepOrange50 => Color(0XFFF5DDDA);

  // DeepPurple
  Color get deepPurple100 => Color(0XFFCCABFD);
  Color get deepPurple50 => Color(0XFFE8DCFA);
  Color get deepPurple5001 => Color(0XFFF3ECFF);
  Color get deepPurple600 => Color(0XFF6338A5);

  // Gray
  Color get gray200 => Color(0XFFE8E9E9);
  Color get gray300 => Color(0XFFDDDDDD);
  Color get gray50 => Color(0XFFFEF8F3);
  Color get gray500 => Color(0XFFA7A7A7);
  Color get gray50001 => Color(0XFF959595);
  Color get gray800 => Color(0XFF4A4A4A);

  // Grayf
  Color get gray4003f => Color(0X3FC0C0C0);

  // LightGreen
  Color get lightGreen100 => Color(0XFFE6EAC3);
  Color get lightGreen10001 => Color(0XFFE4E8C0);
  Color get lightGreen10002 => Color(0XFFDAEEB7);
  Color get lightGreen300 => Color(0XFFBBC794);
  Color get lightGreen900 => Color(0XFF395A1D);

  // LightGreenf
  Color get lightGreen3007f => Color(0X7FBBC894);

  // Orange
  Color get orange50 => Color(0XFFF9F5D3);

  // Pink
  Color get pink50 => Color(0XFFF2DBEC);
  Color get pink900 => Color(0XFF8A2671);
  Color get pink90001 => Color(0XFF8B2873);

  // Red
  Color get red100 => Color(0XFFFFDDD2);
  Color get red10001 => Color(0XFFF7DECA);
  Color get red200 => Color(0XFFFF9B9B);
  Color get red20001 => Color(0XFFFF9C9C);
  Color get redA100 => Color(0XFFFF7B7B);

  // Yellow
  Color get yellow50 => Color(0XFFFFF6EF);
}

PrimaryColors get appTheme => ThemeHelper().themeColor();
ThemeData get theme => ThemeHelper().themeData();
